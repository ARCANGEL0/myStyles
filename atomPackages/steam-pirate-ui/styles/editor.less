atom-text-editor[mini] {
  line-height: @component-line-height;
  max-height: @component-line-height + 2; // +2 for borders

  overflow: auto;
}
atom-text-editor,
:host{
  background-color: @app-background-color;
}

atom-text-editor,
.tile,:host{
  background-color:  transparent ;
}
atom-text-editor,
atom-text-editor::shadow {
  .scroll-view {
  background-color:   @app-background-color !important ;

  }
  .gutter {
  background-color:   @app-background-color !important ;

  }
}
atom-workspace[class*="-light"] atom-text-editor {
	filter: none;
  opacity: 0.7;
}

atom-text-editor-minimap {
  transform: perspective(12in) rotateY(-12deg);
  transform-origin: right;

  .minimap-visible-area {
    box-shadow:
      inset 0 0 20px rgb(24, 245, 232),
      inset 0 0 100px rgb(24, 245, 232),
      0 0 10px rgb(24, 245, 232);
    opacity: 0.5;
    transition: opacity 0.6s ease;
  }
  // minimap hover
  .minimap-visible-area:hover {
    opacity: 0.6;
  }

}

atom-workspace[class*="-light"] .minimap-visible-area {
    filter: invert();
  }



atom-workspace[class*="-light"] .minimap-visible-area {
    filter: invert();
  }


atom-text-editor[mini] {
  font-size: @ui-input-size;
  line-height: @ui-line-height;
  max-height: none;
  padding-left: 0;
  border-radius: @component-border-radius;
  color: @text-color-highlight;
  border: 1px solid @input-border-color;
  background-color: rgb(24, 245, 232);
  padding-left: @ui-padding/2;

  &,
  &::shadow {
    .placeholder-text {
      color: @text-color-subtle;
    }
    .selection .region {
      background-color: @input-selection-color;
    }
    .cursor {
      border-color: rgb(102, 198, 195);
      border-width: 2px;
    }
  }

  &.is-focused,
  &.is-focused::shadow {
    .focus();
    background-color: @input-background-color-focus;
    .selection .region {
      background-color: @input-selection-color-focus;
    }
  }
}
