atom-text-editor {
  filter: contrast(1.2) brightness(1.1);
}

// autocomplete color adjustment
atom-overlay {
  background: @accent-color;
}

atom-workspace[class*="-light"] atom-text-editor {
	filter: none;
  opacity: 0.7;
}

atom-text-editor-minimap {
  transform: perspective(12in) rotateY(-12deg);
  transform-origin: right;

  .minimap-visible-area {
    box-shadow:
      inset 0 0 20px @ui-bg,
      inset 0 0 100px @ui-bg,
      0 0 10px @ui-bg;
    opacity: 0.5;
    transition: opacity 0.6s ease;
  }
  // minimap hover
  .minimap-visible-area:hover {
    opacity: 0.6;
  }

}

atom-workspace[class*="-light"] .minimap-visible-area {
    filter: invert();
  }

// cursor styling
atom-text-editor.editor .cursors {
  .cursor {
    border: none;
  }
  .cursor::after {
    content: "â–Ž";
    color: currentColor;//currentColor;
    text-shadow:
      0 0 2px currentColor,
      0 0 8px currentColor;
  }
}

// TODO: Find a better selector, maybe a new class like atom-text-editor[medium]
atom-panel-container atom-text-editor.is-focused {
  .focus();
}

// Mini
// Usually just single line inputs

atom-text-editor[mini] {
  overflow: auto;
  font-size: @ui-input-size;
  line-height: @ui-line-height;
  max-height: @ui-line-height * 5; // rows
  padding-left: @ui-padding/3;
  border-radius: @component-border-radius;
  color: @text-color-highlight;
  border: 1px solid @input-border-color;
  background-color: @input-background-color;

  .placeholder-text {
    color: @text-color-subtle;
  }

  .selection .region {
    background-color: @input-selection-color;
  }

  .cursor {
    border-color: @accent-color;
    border-width: 2px;
  }

  &.is-focused {
    .focus();
    background-color: @input-background-color-focus;
    .selection .region {
      background-color: @input-selection-color-focus;
    }
  }
}
